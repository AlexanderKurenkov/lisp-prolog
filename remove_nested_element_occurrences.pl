% =================================================================================
% удаление вхождений элемента списка на всех его уровнях
% =================================================================================
% p(V, X, L)
% 	V - исходный список
% 	X - терм, входящий в список V
% 	L - список полученный из V после удаления всех Х

% исходный и результирующий списки являются пустыми
p([], _, []).

% элемент X расположен в голове исходного списка
p([X|T], X, L) :-
	% используется хвост исходного списка,
	% полученный после удаления элемента X
    p(T, X, L).

p([H|T], X, [LH|LT]) :-
	% проверка, что голова списка является списком
    \+ is_list(H),

	% предикат отрицания унификации для проверки
	% наличия элемента X в голове списка
    H \= X,

	% унификация переменных LH и H
    LH = H,

	% рекурсивный вызов предиката для обработки
	% оставшихся элементов списка (хвоста)
    p(T, X, LT).


p([H|T], X, [LH|LT]) :-
	% проверка, что голова списка также является (списком)
    is_list(H),

	% голова H и хвост Т обрабатываются по отдельности
	% за счет рекурсивного вызова данного предиката
    p(H, X, LH),
    p(T, X, LT).
